#脚本知识点总结
#

awk  
	getline
		ls -lS | awk 'BEGIN{getline;}{"md5sum " $9 | getline;print $1 " " $2}'
		BEGIN中getline,先读取一行,然后再到awk按行读取。并按行的某字段求md5.
		具体getline使用参照evernote.

	$0
		aiapple@ubuntu:~/git/my-bash-shell/active_users$ cat TIME | awk '{print NR " " $0}'
        	1 00:00
        	2 00:00
		在打印前面增加行数。

	shell[$NF]++
		aiapple@ubuntu:~$ awk -F: '{shell[$NF]++} END {for (a in shell) {print a,shell[a]}}' /etc/passwd
		a 为每一不同的某列；shell[a] 为这一不同列的个数；

find -exec grep
	在目录中找到含有“shift”字符的文件
	aiapple@ubuntu:~/git/my-bash-shell$ find .  -exec grep "shift" {} + | cut -d " "  -f1 |uniq
	
	注意:grep,大括号后面 + --> \; 两者有一定区别



IFS     分割字符串,以数组形式存放
	
	类似mysql 当中更改结束符: delimiter // 
		  在用之后一般还原: delimiter ;

	data="name,sex,location,numbers"
	oldIFS=$IFS
	IFS=','
	for item in $data;
	do
   	     echo item:$item
	done
	IFS=$oldIFS

	IFS将字符串的分割符定义成‘,’这样data原本一个字符串
	就变成字符串数组有:name,sex,location,numbers
	在用完之后又还原成默认值
	使用于：IFS.sh


	早知道这个命令得少写多少行！！！

seq
	常用在脚本参数循环中
	for I in `seq 0 #$`;done
	使用于：adminusers3.sh

id user1
	判断user1用户是否存在
	使用于：adminusers3.sh
	
判断字符参数是否为数字
        使用grep判断
        if grep '^[[:digit:]]' <<<"$1" &>/dev/null && ;then


bash    -x  调试脚本

	    set -x
		需调试的部分脚本
	    set +x  

	    set -v:当命令进行读取时显示输入
	    set +v:禁止打印输入	    

shift
	多用在处理输入参数
	while [ "$#" -gt 0 ]; do
        case "$1" in
         '--verbose'|'-v')
           DEBUG=1
           shift 1
           ;;
         '--all'|'-a')
           use_all=1
           shift 1
           ;;
         '--increment'|'-i')
           is_dir $2
           use_inc=1
           inc_dir="$2"
           shift 2
          
read 判断输入回车方式
 	 read -t 5 -s -p "请输入:"op 
  	 if  [ -z $op ];then

     判断输入tab按键
	 if [ $op == $'\t' ];then
     
     	 -n:指定输入字符数
     	 -s:无回显
     	 -p:提示
     	 -t:等待时间


read 从文件按行读取
	while read user;do
		echo $user
	done < users.t
        使用于:active_users.sh

	while read user;do
		echo $user
	done< <(cat users.t)
        使用于:remove_duplicats.sh

tail -n +2
	从第2行开始显示；
	zane@zane:~/github/my-bash-shell/pcpu_usage$ cat test.t | tail -n +1
        1 COMMAND         %CPU
        2 init             1.0
        3 kthreadd         2.0
        4 ksoftirqd/0      3.0
        zane@zane:~/github/my-bash-shell/pcpu_usage$ cat test.t | tail -n +2
        2 init             1.0
        3 kthreadd         2.0
        4 ksoftirqd/0      3.0
	head -n -2
		最后两行不显示
	使用于: pcpu_usage.sh


sort -nrk 3
	n  : 用字符串数字进行排序
	r  : 逆序排序
	k 3: 指定对第3列进行排序
	使用于: pcpu_usage.sh

/etc/passwd 中bin/bash 有多少？
	aiapple@ubuntu:~$ awk -F: '{shell[$NF]++} END {for (a in shell) {print a,shell[a]}}' /etc/passwd
	使用于: intrder_detect.sh


tr -d 删除字符串中指定字符
   -s 替换指定字符串中字符
      aiapple@ubuntu:~/git/my-bash-shell/active_users$ cat t1
      (00:00)
      (00:00)
      aiapple@ubuntu:~/git/my-bash-shell/active_users$ cat t1 | tr -d  '()' 
      00:00
      00:00
      aiapple@ubuntu:~/git/my-bash-shell/active_users$ cat t1 | tr -d  '()' | tr -s ':' "-"
      00-00
      00-00	
      使用于:active_users.sh

插入RANK值
	aiapple@ubuntu:~/git/my-bash-shell/active_users$ cat TIME 
	00:00
	00:00
	aiapple@ubuntu:~/git/my-bash-shell/active_users$ cat TIME | awk '{print NR " " $0}'
	1 00:00
	2 00:00
        使用于:active_users.sh

EOF
	Shell中通常将EOF与 << 结合使用,表示后续的输入作为子命令或子Shell的输入,         直到遇到EOF为止，再返回到主调Shell。
	mysql -uroot -p123456 <<EOF
	use test;
EOF
	注意:第二个EOF需要顶格写
	使用于: connect_mysql.sh

<<COMMENTBLOCK
.............
COMMENTBLOCK
	整段代码注释
	使用于: login_notify.sh

split 
	-b 	     指定每个分割文件的大小
	-d 	     分割文件以数字结尾
	-a 4         数字结尾的长度
        split-file   指定的分割文件的文指定的分割文件的文件名名
	
	zane@zane-V:~/auth$ ls -hl
	总用量 2.7M
	-rw-rw-r-- 1 zane zane 2.7M 12月 26 13:38 auth.log
	zane@zane-V:~/auth$ split -b 500k auth.log -d -a 4 split-file
	zane@zane-V:~/auth$ ls -lh
	总用量 5.3M
	-rw-rw-r-- 1 zane zane 2.7M 12月 26 13:38 auth.log
	-rw-rw-r-- 1 zane zane 500K 12月 26 14:22 split-file0000
	-rw-rw-r-- 1 zane zane 500K 12月 26 14:22 split-file0001
	-rw-rw-r-- 1 zane zane 500K 12月 26 14:22 split-file0002
	-rw-rw-r-- 1 zane zane 500K 12月 26 14:22 split-file0003
	-rw-rw-r-- 1 zane zane 500K 12月 26 14:22 split-file0004
	-rw-rw-r-- 1 zane zane 173K 12月 26 14:22 split-file0005

